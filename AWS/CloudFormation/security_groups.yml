---
AWSTemplateFormatVersion: '2010-09-09'
Description: Template for creating Security Groups for the given VPC ID

Mappings:
  AllowedIPs:
    Offices:
      Karaganda: 91.185.25.194/32
      Astana: 178.89.5.130/32

Parameters:
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID

Resources:

  # 1. Admin SG
  AdminSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Admin Inbound Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: !FindInMap [AllowedIPs, Offices, Karaganda]
          FromPort: 0
          ToPort: 65535
        - IpProtocol: tcp
          CidrIp: !FindInMap [AllowedIPs, Offices, Astana]
          FromPort: 0
          ToPort: 65535
      Tags:
        - Key: Name
          Value: !Join ["", [!Ref 'AWS::StackName', '-AdminSG']]
      VpcId: !Ref VPCId

  # 2. ELB SG
  ELBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: All TCP connection Security Group for ELB
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 0
          ToPort: 65535
      Tags:
        - Key: Name
          Value: !Join ["", [!Ref 'AWS::StackName', '-ELBSG']]
      VpcId: !Ref VPCId

  # 3. EC2 SG
  EC2SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: All TCP connection Security Group for EC2
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Join ["", [!Ref 'AWS::StackName', '-EC2SG']]

  InboundTcpRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId: !GetAtt [ELBSG, "GroupId"]
      GroupId: !GetAtt [EC2SG, "GroupId"]

  OutboundTcpRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      DestinationSecurityGroupId: !GetAtt [EC2SG, "GroupId"]
      GroupId: !GetAtt [ELBSG, "GroupId"]

  # 4. Security group for MySQL 3306 TCP port
  RDS4EC2SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: All 3306 TCP connection Security Group for EC2
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 3306
          ToPort: 3306
      Tags:
        - Key: Name
          Value: !Join ["", [!Ref 'AWS::StackName', '-RDS4EC2SG']]

Outputs:
  AdminSGId:
    Value: !GetAtt [AdminSG, "GroupId"]
  ELBSGId:
    Value: !GetAtt [ELBSG, "GroupId"]
  EC2SGId:
    Value: !GetAtt [EC2SG, "GroupId"]
  RDS4EC2SGId:
    Value: !GetAtt [RDS4EC2SG, "GroupId"]
